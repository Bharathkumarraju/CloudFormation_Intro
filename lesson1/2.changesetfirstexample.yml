Parameters:
   NameOfService:
     Description: "The name of the service this stack is used for"
     Type: String  
   KeyName:
      Description: Name of keypair to enable ssh access to an EC2 instance
      Type: AWS::EC2::KeyPair::KeyName
   InstTypeParam:
      Description: WHich Type of instance you gonna select 
      Type: String
      Default: t2.micro
      AllowedValues:
        - t2.micro
        - m1.small
        - m1.large
Mappings:
  bharathRegionMap:
    us-east-1:
      AMI: ami-1853ac65
    us-west-1:
      AMI: ami-bf5540df
    eu-west-1:
      AMI: ami-3bfab942
    ap-southeast-1:
      AMI: ami-e2adf99e
    ap-southeast-2:
      AMI: ami-43874721
Resources:
  BKREc2Instance:
    Type: 'AWS::EC2::Instance'
    Metadata: 
      AWS::CloudFormation::Init:  
        config:  
          packages:
            yum:
              httpd: []
              php: []
          files:
             /var/www/html/index.php:
                content: !Sub |
                    <?php print "Hello World Bharath is here!"; ?>
          services: 
            sysvinit:
              httpd:
                 enabled: true 
                 ensureRunning: true
                 
    Properties:
      InstanceType: !Ref InstTypeParam
      ImageId: 
        Fn::FindInMap:
          - bharathRegionMap
          - !Ref AWS::Region
          - AMI
      UserData: 
        'Fn::Base64':
           !Sub |
              #!/bin/bash -xe
              # Ensure that AWS CFN bootstrap is the latest
              yum install -y aws-cfn-bootstrap
              # Install the files and packages from the metadata
              /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource BKREc2Instance --region ${AWS::Region}
      Tags:
       - Key: Name   
         Value: !Join 
          - "_"
          - - "Ec2"
            - "Instance"
            - "launched"
            - " by"
            - "bharath"
            - "In the AWS Region Called"
            - !Ref AWS::Region
       - Key: BharathName
         Value: !Ref NameOfService
                 
      KeyName: !Ref KeyName
      SecurityGroups: 
       - !Ref BKRSecurityGROUP
  BKRSecurityGROUP:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Allow http website port 80
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0

Outputs:
  InstanceDNSName:
    Value: !GetAtt 
      - BKREc2Instance
      - PublicDnsName
  website: 
    Description: The public DNS for the EC2 instance 
    Value: !Sub 'http://${BKREc2Instance.PublicDnsName}'